/**
 * Example project using the Linked-Data-Fu spider artifact to retrieve RDF graphs on the Web.
 *
 */


apply plugin: 'java'
apply plugin: 'application'

version '0.1'
group   'org.jacamo'


repositories {
    mavenCentral()
    maven { url "https://mvnrepository.com/artifact/org.apache.jena/jena-fuseki"}
    maven { url "https://mvnrepository.com/artifact/org.apache.jena/apache-jena"}
    maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master" }
    maven { url 'https://paul.ti.rw.fau.de/maven/repository/' }
    mavenLocal()
}

dependencies {
    implementation group: 'org.jacamo', name: 'jacamo', version: '0.9'
    implementation group: 'edu.kit.aifb.linkeddatafu', name: 'linked-data-fu-standalone', version: '0.9.12'

    implementation group: 'net.sourceforge.owlapi', name: 'org.semanticweb.hermit', version: '1.4.5.519'
    implementation group: 'com.github.galigator.openllet', name: 'openllet-owlapi', version: '2.6.5'
    implementation group: 'net.sourceforge.owlapi', name: 'jfact', version: '5.0.3'

    // TODO include newer version of wot-td-java
    implementation group: 'ch.unisg.ics.interactions', name: 'wot-td-java', version: '0.0.1'
    implementation fileTree(dir: 'lib', include: 'pddl4j-*.jar')
    implementation fileTree(dir: 'lib', include: 'openllet-owlapi-2.6.5.jar')

    implementation group: 'org.apache.jena', name: 'jena-fuseki-main', version: '4.2.0'
    implementation group: 'org.apache.jena', name: 'jena-rdfconnection', version: '4.1.0'
    implementation fileTree(dir: 'libs', include: '*.jar')
}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}


task dungeonJar(type: Jar) {
    group 'CrawlIntoTheDungeon'
    manifest {
        attributes 'Main-Class': 'runner.RunnerCITDProject'
    }
    baseName = "RunnerCITDProject"
    from {
        (configurations.implmentation.findAll { !it.path.endsWith(".pom") }).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    from (project.projectDir.absolutePath) {
        include '**/*.asl'
        include '**/*.xml'
        include '**/*.jcm'
        include '*.properties'
    }

    zip64 = true
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
    with jar
}

task runDungeon (type: JavaExec, dependsOn: 'classes') {
    group 'CrawlIntoTheDungeon'
    description 'Create a Apache Jena Fuseki Server, load the graph and run the Dungeon simulation'
    main = 'runner.RunnerCITDProject'
    classpath sourceSets.main.runtimeClasspath
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}
