/**
 * Example project using the Linked-Data-Fu spider artifact to retrieve RDF graphs on the Web.
 *
 */


apply plugin: 'java'
apply plugin: 'application'

version '0.1'
group   'org.jacamo'


repositories {
    mavenCentral()
    maven { url "https://mvnrepository.com/artifact/org.apache.jena/apache-jena"}
    maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master" }
    maven { url 'https://paul.ti.rw.fau.de/maven/repository/' }
    mavenLocal()
}

dependencies {
    compile group: 'org.hypermedea', name: 'hypermedea', version: '0.1'
    compile group: 'org.apache.jena', name: 'apache-jena', version: '3.1.0'
    compile group: 'org.apache.jena', name: 'jena-rdfconnection', version: '4.1.0'
}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}


task dungeonJar(type: Jar, dependsOn: 'classes') {
    group      'JaCaMo'
    description 'creates a single runnable jar file with all dependencies'

    manifest {
        attributes 'Main-Class': 'jacamo.infra.JaCaMoLauncher'
    }
    baseName = 'dungeonAdventurer' // the name must start with jacamo so that jacamo...jar is found in the classpath
    from {
        (configurations.compile.findAll { !it.path.endsWith(".pom") }).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    from (project.projectDir.absolutePath) {
        include '**/*.asl'
        include '**/*.xml'
        include '**/*.jcm'
        include '*.properties'
    }
    from (project.buildDir.absolutePath + '/jcm') {
        include '**/*'
    }
    with jar
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"


    doFirst {
        copy {
            from 'ai4industry_jacamo.jcm'
            rename 'ai4industry_jacamo.jcm','default.jcm'
            into project.buildDir.absolutePath + '/jcm'
        }
    }
}


task graphLoaderJar(type: Jar) {
    group 'JavaApacheGraph'
    manifest {
        attributes 'Main-Class': 'loader.GraphLoader'
    }
    baseName = "GraphLoader"
    from {
        (configurations.compile.findAll { !it.path.endsWith(".pom") }).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
    with jar
}

task runLoadGraph (type: JavaExec, dependsOn: 'classes') {
    group 'JavaApacheGraph'
    description 'Automate the graph loading into apache jena fuseki'
    main = 'loader.GraphLoader'
    classpath sourceSets.main.runtimeClasspath
}

task runDungeon (type: JavaExec, dependsOn: 'classes') {
    group 'JaCaMo'
    description 'runs the Dungeon simulation'
    doFirst {
        mkdir 'log'
    }
    main 'jacamo.infra.JaCaMoLauncher'
    args 'dungeon.jcm'
    classpath sourceSets.main.runtimeClasspath
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}
